from django.http import HttpResponse
from django.http import JsonResponse
from django.shortcuts import render
import subprocess
import utils.report_handle as report_handle
import utils.common as common
from report.models import ReportQark, ReportDc, ReportSniffgit


"""
danh sach tools
"""
def scan_tools(request, app_name):
    return render(request, 'list_tools.html', {
        'tools_list' : common.get_tool_list(),
        'app_name' : app_name
    })



"""
scan het tat ca cac apk voi tat ca cac tool
"""
def all_app(request):
    # for
    # app_name = "org.owasp.goatdroid.fourgoats-2.apk"
    # for tool_index in range(len(common.get_tool_list())):
    #     common.use_tool(app_name, tool_index)
    
    # ReportQark.objects.filter(severity='VULNERABILITY').count()
    # ReportQark.objects.filter(severity='WARNING').count()
    # ReportQark.objects.filter(severity='INFO').count()
    
    # end for
    return render(request, 'list_tools.html', {
        'app_name' : 'testing'
    })



"""
su dung tung tool
"""
def scan_tool(request, app_name, tool_index):
    reports = []

    # common.use_tool --> save db
    try:
        common.use_tool(app_name, tool_index)
    except:
        pass
    # get all reports from all reports table    

    return render(request, 'scan_one.html', {'data': {
        'app_name': app_name,
        'toolList': common.get_tool_list(),
        'qark_reports': ReportQark.objects.all(),
        'dc_reports': ReportDc.objects.all(),
        'sniffgit_reports': ReportSniffgit.objects.all(),
        'andro_reports': report_handle.handle_andro_report(app_name)
    }})


"""
su dung tat ca tool cho 1 apk
"""
def all_tool(request, app_name):
    for tool_index in range(len(common.get_tool_list())):
        common.use_tool(app_name, tool_index)
    return render(request, 'scan_one.html', {'data': {
        'app_name': app_name,
        'toolList': common.get_tool_list(),
        'qark_reports': ReportQark.objects.all(),
        'dc_reports': ReportDc.objects.all(),
        'sniffgit_reports': ReportSniffgit.objects.all(),
        'andro_reports': report_handle.handle_andro_report(app_name)
    }})

    return render(request, 'report.html', {'data': {
        'tool_list': common.get_tool_list(),
        'app_list': common.get_app_list(),
        'qark_reports': {},
        'dc_reports': ReportDc.objects.all(),
        'sniffgit_reports': ReportSniffgit.objects.all(),
        'andro_reports': report_handle.handle_andro_report(app_name)
    }})



"""
khi ket noi, hien thi thong tin co ban va danh sach cac ung dung
"""
def connect(request, method, ip):
    # ket qua ket noi
    isSuccess = True
    # thong tin dien thoai
    phone_infos = []
    app_list = []

    if method == '1': 
        try:
            subprocess.check_output(["adb", "connect", ip])
        except:
            pass
    else:
        pass    # method == 0 -> usb

    # ket qua ket noi
    connectResult = subprocess.check_output(["adb", "get-state"])
    if connectResult.strip() == "device":
        # xoa resource cu
        common.delete_old_resource()
        isSuccess = True
        # lay thong tin co ban cua dien thoai
        phone_infos = subprocess.check_output(["sh", "scripts/get_phone_info.sh"])
        phone_infos = phone_infos.splitlines()
        request.session['phone_infos'] = phone_infos
        # lay danh sach app cua dien thoai
        subprocess.check_output(["sh", "scripts/get_app_list.sh"])
        app_list = common.get_app_list()
        request.session['app_list'] = app_list
    else:
        isSuccess = False
    
    # ket qua tra ve
    data = {'success': isSuccess, 'phone_infos': phone_infos, 'app_list': app_list}
    return JsonResponse(data)


"""
hien thi report khi nhan tung nut
"""
def scan_one(request, app_name):
    # pull file apk tu dien thoai
    common.pull_apk(app_name)
    return render(request, 'scan_one.html', {'data': {
        'app_name': app_name,
        'toolList': common.get_tool_list(),
        'qark_reports': ReportQark.objects.all(),
        'dc_reports': ReportDc.objects.all(),
        'sniffgit_reports': ReportSniffgit.objects.all(),
        'andro_reports': report_handle.handle_andro_report(app_name)
    }})